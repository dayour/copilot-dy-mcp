name: Copilot Code Review

on:
  pull_request:
    types: [opened, synchronize]

permissions:
  contents: read
  pull-requests: write

jobs:
  copilot-review:
    runs-on: ubuntu-latest
    name: Copilot Code Review
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Type check
      run: npm run build

    - name: Add PR comment with review guidelines
      uses: actions/github-script@v7
      with:
        script: |
          const { owner, repo, number: pull_number } = context.repo;
          
          const comment = `## ðŸ¤– Copilot Code Review Guidelines

          This PR has been automatically analyzed for Copilot compatibility. Please ensure:

          ### MCP Server Changes
          - [ ] New tools follow the established pattern with proper Zod schemas
          - [ ] Tool descriptions are clear and specific for Copilot Studio integration
          - [ ] Error handling is implemented with user-friendly messages
          - [ ] TypeScript types are properly defined

          ### Copilot Studio Integration
          - [ ] Changes maintain compatibility with existing agents
          - [ ] New functionality includes proper documentation
          - [ ] Demo data is clearly marked and production notes are included

          ### Infrastructure & Deployment
          - [ ] Azure deployment configurations are updated if needed
          - [ ] Docker configuration remains compatible
          - [ ] Environment variables are properly handled

          ---
          *This comment was automatically generated to help maintain code quality and Copilot integration standards.*
          `;

          // Check if we already commented
          const comments = await github.rest.issues.listComments({
            owner,
            repo,
            issue_number: pull_number,
          });

          const existingComment = comments.data.find(comment => 
            comment.body.includes('ðŸ¤– Copilot Code Review Guidelines')
          );

          if (!existingComment) {
            await github.rest.issues.createComment({
              owner,
              repo,
              issue_number: pull_number,
              body: comment
            });
          }